{
  "_from": "babel-preset-es2015",
  "_id": "babel-preset-es2015@6.24.1",
  "_inBundle": false,
  "_integrity": "sha1-1EBQ1rwsn+6nAqrzjXJ6AhBTiTk=",
  "_location": "/babel-preset-es2015",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "babel-preset-es2015",
    "name": "babel-preset-es2015",
    "escapedName": "babel-preset-es2015",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/babel-preset-es2015/-/babel-preset-es2015-6.24.1.tgz",
  "_shasum": "d44050d6bc2c9feea702aaf38d727a0210538939",
  "_spec": "babel-preset-es2015",
  "_where": "/Users/tanghaoyi/Documents/study/plugins/lazyload",
  "author": {
    "name": "Sebastian McKenzie",
    "email": "sebmck@gmail.com"
  },
  "bundleDependencies": false,
  "dependencies": {
    "babel-plugin-check-es2015-constants": "^6.22.0",
    "babel-plugin-transform-es2015-arrow-functions": "^6.22.0",
    "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0",
    "babel-plugin-transform-es2015-block-scoping": "^6.24.1",
    "babel-plugin-transform-es2015-classes": "^6.24.1",
    "babel-plugin-transform-es2015-computed-properties": "^6.24.1",
    "babel-plugin-transform-es2015-destructuring": "^6.22.0",
    "babel-plugin-transform-es2015-duplicate-keys": "^6.24.1",
    "babel-plugin-transform-es2015-for-of": "^6.22.0",
    "babel-plugin-transform-es2015-function-name": "^6.24.1",
    "babel-plugin-transform-es2015-literals": "^6.22.0",
    "babel-plugin-transform-es2015-modules-amd": "^6.24.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
    "babel-plugin-transform-es2015-modules-systemjs": "^6.24.1",
    "babel-plugin-transform-es2015-modules-umd": "^6.24.1",
    "babel-plugin-transform-es2015-object-super": "^6.24.1",
    "babel-plugin-transform-es2015-parameters": "^6.24.1",
    "babel-plugin-transform-es2015-shorthand-properties": "^6.24.1",
    "babel-plugin-transform-es2015-spread": "^6.22.0",
    "babel-plugin-transform-es2015-sticky-regex": "^6.24.1",
    "babel-plugin-transform-es2015-template-literals": "^6.22.0",
    "babel-plugin-transform-es2015-typeof-symbol": "^6.22.0",
    "babel-plugin-transform-es2015-unicode-regex": "^6.24.1",
    "babel-plugin-transform-regenerator": "^6.24.1"
  },
  "deprecated": "We're super üò∏  excited that you're trying to use ES2015 syntax, but instead of continuing yearly presets üò≠ , we recommend using babel-preset-env: npm install babel-preset-env. preset-env without options will compile ES2015+ down to ES5. And by targeting specific browsers, Babel can do less work and you can ship native ES2015+ to users üòé ! Also, we are in the process of releasing v7, so give http://babeljs.io/blog/2017/09/12/planning-for-7.0 a read and test it! Thanks so much for using Babel üôè , please give us a follow @babeljs for updates, join slack.babeljs.io for discussion and help support at opencollective.com/babel",
  "description": "Babel preset for all es2015 plugins.",
  "devDependencies": {
    "babel-helper-plugin-test-runner": "^6.24.1",
    "babel-helper-transform-fixture-test-runner": "^6.24.1"
  },
  "homepage": "https://babeljs.io/",
  "license": "MIT",
  "main": "lib/index.js",
  "name": "babel-preset-es2015",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-preset-es2015"
  },
  "version": "6.24.1"
}
